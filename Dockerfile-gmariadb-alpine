# $Id: Dockerfile-gmariadb-alpine 397 2021-06-21 14:05:24Z bpahlawa $
# $Author: bpahlawa $
# Created: 26-APR-2021
# Modified by: bpahlawa
# $Date: 2021-06-21 22:05:24 +0800 (Mon, 21 Jun 2021) $
# $Revision: 397 $
#
# How to run the docker image
# for single node:
# Rebuild DBCONFIG
# docker run -it --name galera-mariadb --network host -v /opt/mariadb:/var/lib/mysql -v /opt/mariadb/conf:/etc/my.cnf.d -e MARIADB_DBCONFIG_REBUILD=yes galera-mariadb
#
# Rebuild DBCONFIG and Database
# docker run -it --name galera-mariadb --network host -v /opt/mariadb:/var/lib/mysql -v /opt/mariadb/conf:/etc/my.cnf.d -e MARIADB_DBCONFIG_REBUILD=yes MARIADB_DATABASE_REBUILD=yes galera-mariadb
#
# Run without Rebuild
# docker run -it --name galera-mariadb --network host -v /opt/mariadb:/var/lib/mysql -v /opt/mariadb/conf:/etc/my.cnf.d galera-mariadb
#
# or
#
# Rebuild DBCONFIG and DATABASE
# docker run -it --name galera-mariadb --network host -v /opt/mariadb:/var/lib/mysql -v /opt/mariadb/conf:/etc/my.cnf.d -e MARIADB_DBCONFIG_REBUILD=yes -e MARIADB_DATABASE_REBUILD=yes galera-mariadb
#
#
# for donor node:
# Rebuild DBCONFIG with HOST network
# docker run -it --name galera-mariadb  --network host -v /opt/mariadb:/var/lib/mysql -v /opt/mariadb/conf:/etc/my.cnf.d -e GALERA_CLUSTER_ACTIVE=yes -e MARIADB_DBCONFIG_REBUILD=yes galera-mariadb
#
# Rebuild DBCONFIG and Database
# docker run -it --name galera-mariadb  --network host -v /opt/mariadb:/var/lib/mysql -v /opt/mariadb/conf:/etc/my.cnf.d -e GALERA_CLUSTER_ACTIVE=yes -e MARIADB_DBCONFIG_REBUILD=yes -e MARIADB_DATABASE_REBUILD=yes galera-mariadb
#
# Run without Rebuild with HOST network
# docker run -it --name galera-mariadb  --network host -v /opt/mariadb:/var/lib/mysql -v /opt/mariadb/conf:/etc/my.cnf.d -e GALERA_CLUSTER_ACTIVE=yes galera-mariadb
#
# for joiner node:
# Rebuild DBCONFIG and DATABASE with HOST network
# docker run -it --name galera-mariadb  --network host -v /opt/mariadb:/var/lib/mysql -v /opt/mariadb/conf:/etc/my.cnf.d -e MARIADB_DBCONFIG_REBUILD=yes -e MARIADB_DATABASE_REBUILD=yes -e GALERA_CLUSTER_ADDRESS="gcomm://192.168.0.158" galera-mariadb
#
# Run without Rebuild DBCONFIG and DATABASE with HOST network
# docker run -it --name galera-mariadb  --network host -v /opt/mariadb:/var/lib/mysql -v /opt/mariadb/conf:/etc/my.cnf.d -e GALERA_CLUSTER_ADDRESS="gcomm://192.168.0.158" galera-mariadb
#
# add entrypoint.sh in base64 to Dockerfile
# echo -e "RUN echo \"$(cat gmariadb.env | base64 -w0)\" | base64 -d > /usr/local/bin/gmariadb.env\nRUN chmod ugo+x /usr/local/bin/gmariadb.env" >> Dockerfile-gmariadb-alpine
# echo -e "RUN echo \"$(cat entrypoint-gmariadb.sh | base64 -w0)\" | base64 -d > /usr/local/bin/entrypoint-gmariadb.sh\nRUN chmod ugo+x /usr/local/bin/entrypoint-gmariadb.sh\nENTRYPOINT [\"/usr/local/bin/entrypoint-gmariadb.sh\"]" >> Dockerfile-gmariadb-alpine
#
# where:
# /opt/mariadb (on Host)      is mapped to /var/lib/mysql (on Container)
# /opt/mariadb/conf (on Host) is mapped to /etc/my.cnf.d (on Container)
# /opt/web                    is mapped to Apache2 dir
# /opt/web/main               is mapped to Apache2 document root
# MARIADB_DBCONFIG_REBUILD=yes (re-create /etc/my.cnf.d/server.cnf
# MARIADB_DATABASE_REBUILD=yes (destroy and re-create database under directory /var/lib/mysql/data )
# --network host (it uses host network, NOTE: galera must use network host if it requires to have multimaster replication on a different node)
#
# NOTE: for all default environment variable please check galera.env file
#
# How to build this Dockerfile
# Run the following command where Dockerfile exists
#
# docker build --tag galera-mariadb .
# docker build --tag galera-mariadb -f ./Dockerfile-gmariadb-alpine /mnt

FROM jsimonetti/alpine-edge:latest
MAINTAINER brpahlaw

WORKDIR /usr/local/bin
VOLUME /var/lib/mysql /etc/my.cnf.d
RUN apk update
RUN apk upgrade
RUN echo "https://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
RUN apk add bash which socat galera mariadb-client mariadb-backup procps iproute2
RUN ln -s /usr/lib/mariadb /usr/lib/mysql
RUN echo "IyEvYmluL2Jhc2gKIyAkSWQ6IGdtYXJpYWRiLmVudiAzOTYgMjAyMS0wNi0yMSAxMDo1Nzo1NFogYnBhaGxhd2EgJAojIENyZWF0ZWQgMTktQVBSLTIwMjEKIyAkQXV0aG9yOiBicGFobGF3YSAkCiMgJERhdGU6IDIwMjEtMDYtMjEgMTg6NTc6NTQgKzA4MDAgKE1vbiwgMjEgSnVuIDIwMjEpICQKIyAkUmV2aXNpb246IDM5NiAkCgoKZXhwb3J0IE1BUklBREJfREFUQUJBU0VfUkVCVUlMRD0ke01BUklBREJfREFUQUJBU0VfUkVCVUlMRDotbm99CmV4cG9ydCBNQVJJQURCX0RCQ09ORklHX1JFQlVJTEQ9JHtNQVJJQURCX0RCQ09ORklHX1JFQlVJTEQ6LW5vfQpleHBvcnQgR0FMRVJBX0NMVVNURVJfTkFNRT0ke0dBTEVSQV9DTFVTVEVSX05BTUU6LW15Y2x1c3Rlcn0KZXhwb3J0IEdBTEVSQV9DTFVTVEVSX0JPT1RTVFJBUD0ke0dBTEVSQV9DTFVTVEVSX0JPT1RTVFJBUDotbm99CmV4cG9ydCBHQUxFUkFfQ0xVU1RFUl9BRERSRVNTPSR7R0FMRVJBX0NMVVNURVJfQUREUkVTUzotImdjb21tOi8vIn0KZXhwb3J0IFVTRV9DT05UQUlORVJfQUREUkVTUz0ke1VTRV9DT05UQUlORVJfQUREUkVTUzoteWVzfQpleHBvcnQgR0FMRVJBX0RFRkFVTFRfTk9ERU5BTUU9JHtHQUxFUkFfREVGQVVMVF9OT0RFTkFNRTotJChob3N0bmFtZSAtcyl9CmV4cG9ydCBHQUxFUkFfREVGQVVMVF9BRERSRVNTPSR7R0FMRVJBX0RFRkFVTFRfQUREUkVTUzotJChob3N0bmFtZSAtaSB8IGF3ayAne3ByaW50ICQxfScpfQpleHBvcnQgJHtNQVJJQURCX1JPT1RfUEFTU1dPUkR9CmV4cG9ydCBNQVJJQURCX0RBVEFCQVNFX05BTUU9JHtNQVJJQURCX0RBVEFCQVNFX05BTUU6LW15ZGJ9CmV4cG9ydCBNQVJJQURCX0RBVEFCQVNFX1VTRVI9JHtNQVJJQURCX0RBVEFCQVNFX1VTRVI6LWFkbWlufQpleHBvcnQgTUFSSUFEQl9EQVRBQkFTRV9VU0VSUEFTUz0ke01BUklBREJfREFUQUJBU0VfVVNFUlBBU1M6LXBhc3N3b3JkfQpleHBvcnQgTUFSSUFEQl9SRVBMSUNBVElPTl9VU0VSPSR7TUFSSUFEQl9SRVBMSUNBVElPTl9VU0VSOi1yZXBsdXNlcn0KZXhwb3J0IE1BUklBREJfUkVQTElDQVRJT05fVVNFUlBBU1M9JHtNQVJJQURCX1JFUExJQ0FUSU9OX1VTRVJQQVNTOi1wYXNzd29yZH0KZXhwb3J0IE1BUklBREJfQkFTRV9ESVI9JHtNQVJJQURCX0JBU0VfRElSOi0vdmFyL2xpYi9teXNxbH0KZXhwb3J0IEdBTEVSQV9CT09UU1RSQVBfRElSPSIke01BUklBREJfQkFTRV9ESVJ9Ly5ib290c3RyYXAiCmV4cG9ydCBHQUxFUkFfQk9PVFNUUkFQX0ZJTEU9IiR7R0FMRVJBX0JPT1RTVFJBUF9ESVJ9L2RvbmUiCmV4cG9ydCBNQVJJQURCX0RBVEFCQVNFX0RJUj0ke01BUklBREJfREFUQUJBU0VfRElSOi0ke01BUklBREJfQkFTRV9ESVJ9L2RhdGF9CmV4cG9ydCBNQVJJQURCX0RFRkFVTFRfUE9SVD0ke01BUklBREJfREVGQVVMVF9QT1JUOi0zMzA2fQpleHBvcnQgTUFSSUFEQl9URU1QX0RJUj0ke01BUklBREJfVEVNUF9ESVI6LSR7TUFSSUFEQl9CQVNFX0RJUn0vdG1wfQpleHBvcnQgTUFSSUFEQl9TT0NLRVRfRklMRT0ke01BUklBREJfU09DS0VUX0ZJTEU6LSR7TUFSSUFEQl9URU1QX0RJUn0vbXlzcWwuc29ja30KZXhwb3J0IE1BUklBREJfUElEX0ZJTEU9JHtNQVJJQURCX1BJRF9GSUxFOi0ke01BUklBREJfVEVNUF9ESVJ9L215c3FsZC5waWR9CmV4cG9ydCBNQVJJQURCX0JJTkRfQUREUkVTUz0ke01BUklBREJfQklORF9BRERSRVNTOi0wLjAuMC4wfQpleHBvcnQgTUFSSUFEQl9MT0dTX0RJUj0ke01BUklBREJfTE9HU19ESVI6LSR7TUFSSUFEQl9CQVNFX0RJUn0vbG9nc30KZXhwb3J0IE1BUklBREJfREVGQVVMVF9DSEFSU0VUPSR7TUFSSUFEQl9ERUZBVUxUX0NIQVJTRVQ6LXV0Zjh9CmV4cG9ydCBNQVJJQURCX0RFRkFVTFRfQ09MTEFURT0ke01BUklBREJfREVGQVVMVF9DT0xMQVRFOi11dGY4X2dlbmVyYWxfY2l9CmV4cG9ydCBNQVJJQURCX1BMVUdJTl9ESVI9JHtNQVJJQURCX1BMVUdJTl9ESVI6LSR7TUFSSUFEQl9CQVNFX0RJUn0vcGx1Z2lufQpleHBvcnQgTUFSSUFEQl9CQUNLVVBfVVNFUj0ke01BUklBREJfQkFDS1VQX1VTRVI6LSJtYXJpYWJrcHVzZXIifQpleHBvcnQgTUFSSUFEQl9CQUNLVVBfVVNFUlBBU1M9JHtNQVJJQURCX0JBQ0tVUF9VU0VSUEFTUzotInBhc3N3b3JkIn0KZXhwb3J0IE1BUklBREJfU1NUX01FVEhPRD0ke01BUklBREJfU1NUX01FVEhPRDotIm1hcmlhYmFja3VwIn0K" | base64 -d > /usr/local/bin/gmariadb.env
RUN chmod ugo+x /usr/local/bin/gmariadb.env
RUN echo "" | base64 -d > /usr/local/bin/entrypoint-gmariadb.sh
RUN chmod ugo+x /usr/local/bin/entrypoint-gmariadb.sh
ENTRYPOINT ["/usr/local/bin/entrypoint-gmariadb.sh"]
